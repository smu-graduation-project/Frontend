{"ast":null,"code":"import axios from \"axios\";\nimport { cookies, setCookie, useCookies } from \"react-cookie\";\nconst JWT_EXPIRY_TIME = 24 * 3600 * 1000;\n\nconst onLoginSuccess = response => {\n  setCookie('access-token', response.headers[\"authorization\"]); // refreshToken 헤더에 설정\n\n  axios.defaults.headers.common['Authorization'] = cookies.get('refresh-token'); // accessToken 만료하기 1분 전에 로그인 연장\n\n  setTimeout(onSilentRefresh, JWT_EXPIRY_TIME - 60000);\n};\n\nconst onSilentRefresh = () => {\n  //주소에 refreshtoken헤더 설정값 붙힌 상태로 post -> acesstoken 재발급.\n  axios.post('//', data).then(onLoginSuccess).catch(function (error) {\n    console.log(error);\n  });\n};\n\nexport { onLoginSuccess, onSilentRefresh }; //이 모듈은 순전히 refreshtoken을 이용해 accesstoken을 갱신하는데에 이용된다.\n//이 모듈을 import 하면서(자동 accesstoken갱신) 서버로 어떠한 요청을 보낼때마다 accesstoken을\n//쿠키값에서 빼온다음, 헤더에 강제 저장후 보내기.","map":{"version":3,"names":["axios","cookies","setCookie","useCookies","JWT_EXPIRY_TIME","onLoginSuccess","response","headers","defaults","common","get","setTimeout","onSilentRefresh","post","data","then","catch","error","console","log"],"sources":["C:/Users/gram1/Desktop/Frontend-React/mainpage_react/src/components/Loginpage/jwtrefresh.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { cookies, setCookie, useCookies } from \"react-cookie\";\r\n\r\nconst JWT_EXPIRY_TIME = 24 * 3600 * 1000;\r\n\r\nconst onLoginSuccess = response => {\r\n  setCookie('access-token', response.headers[\"authorization\"]);\r\n  // refreshToken 헤더에 설정\r\n  axios.defaults.headers.common['Authorization'] = cookies.get('refresh-token')\r\n  // accessToken 만료하기 1분 전에 로그인 연장\r\n  setTimeout(onSilentRefresh, JWT_EXPIRY_TIME - 60000);\r\n}\r\n\r\nconst onSilentRefresh = () => {\r\n  //주소에 refreshtoken헤더 설정값 붙힌 상태로 post -> acesstoken 재발급.\r\n  axios.post('//', data) \r\n      .then(onLoginSuccess)\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      })\r\n}\r\n\r\nexport {onLoginSuccess,onSilentRefresh};\r\n\r\n//이 모듈은 순전히 refreshtoken을 이용해 accesstoken을 갱신하는데에 이용된다.\r\n//이 모듈을 import 하면서(자동 accesstoken갱신) 서버로 어떠한 요청을 보낼때마다 accesstoken을\r\n//쿠키값에서 빼온다음, 헤더에 강제 저장후 보내기."],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,EAAkBC,SAAlB,EAA6BC,UAA7B,QAA+C,cAA/C;AAEA,MAAMC,eAAe,GAAG,KAAK,IAAL,GAAY,IAApC;;AAEA,MAAMC,cAAc,GAAGC,QAAQ,IAAI;EACjCJ,SAAS,CAAC,cAAD,EAAiBI,QAAQ,CAACC,OAAT,CAAiB,eAAjB,CAAjB,CAAT,CADiC,CAEjC;;EACAP,KAAK,CAACQ,QAAN,CAAeD,OAAf,CAAuBE,MAAvB,CAA8B,eAA9B,IAAiDR,OAAO,CAACS,GAAR,CAAY,eAAZ,CAAjD,CAHiC,CAIjC;;EACAC,UAAU,CAACC,eAAD,EAAkBR,eAAe,GAAG,KAApC,CAAV;AACD,CAND;;AAQA,MAAMQ,eAAe,GAAG,MAAM;EAC5B;EACAZ,KAAK,CAACa,IAAN,CAAW,IAAX,EAAiBC,IAAjB,EACKC,IADL,CACUV,cADV,EAEKW,KAFL,CAEW,UAAUC,KAAV,EAAiB;IACtBC,OAAO,CAACC,GAAR,CAAYF,KAAZ;EACD,CAJL;AAKD,CAPD;;AASA,SAAQZ,cAAR,EAAuBO,eAAvB,G,CAEA;AACA;AACA"},"metadata":{},"sourceType":"module"}