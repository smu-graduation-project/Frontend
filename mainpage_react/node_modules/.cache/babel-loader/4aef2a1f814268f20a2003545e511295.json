{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createPathRewriter = void 0;\n\nconst isPlainObj = require(\"is-plain-obj\");\n\nconst errors_1 = require(\"./errors\");\n\nconst logger_1 = require(\"./logger\");\n\nconst logger = (0, logger_1.getInstance)();\n/**\n * Create rewrite function, to cache parsed rewrite rules.\n *\n * @param {Object} rewriteConfig\n * @return {Function} Function to rewrite paths; This function should accept `path` (request.url) as parameter\n */\n\nfunction createPathRewriter(rewriteConfig) {\n  let rulesCache;\n\n  if (!isValidRewriteConfig(rewriteConfig)) {\n    return;\n  }\n\n  if (typeof rewriteConfig === 'function') {\n    const customRewriteFn = rewriteConfig;\n    return customRewriteFn;\n  } else {\n    rulesCache = parsePathRewriteRules(rewriteConfig);\n    return rewritePath;\n  }\n\n  function rewritePath(path) {\n    let result = path;\n\n    for (const rule of rulesCache) {\n      if (rule.regex.test(path)) {\n        result = result.replace(rule.regex, rule.value);\n        logger.debug('[HPM] Rewriting path from \"%s\" to \"%s\"', path, result);\n        break;\n      }\n    }\n\n    return result;\n  }\n}\n\nexports.createPathRewriter = createPathRewriter;\n\nfunction isValidRewriteConfig(rewriteConfig) {\n  if (typeof rewriteConfig === 'function') {\n    return true;\n  } else if (isPlainObj(rewriteConfig)) {\n    return Object.keys(rewriteConfig).length !== 0;\n  } else if (rewriteConfig === undefined || rewriteConfig === null) {\n    return false;\n  } else {\n    throw new Error(errors_1.ERRORS.ERR_PATH_REWRITER_CONFIG);\n  }\n}\n\nfunction parsePathRewriteRules(rewriteConfig) {\n  const rules = [];\n\n  if (isPlainObj(rewriteConfig)) {\n    for (const [key] of Object.entries(rewriteConfig)) {\n      rules.push({\n        regex: new RegExp(key),\n        value: rewriteConfig[key]\n      });\n      logger.info('[HPM] Proxy rewrite rule created: \"%s\" ~> \"%s\"', key, rewriteConfig[key]);\n    }\n  }\n\n  return rules;\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","createPathRewriter","isPlainObj","require","errors_1","logger_1","logger","getInstance","rewriteConfig","rulesCache","isValidRewriteConfig","customRewriteFn","parsePathRewriteRules","rewritePath","path","result","rule","regex","test","replace","debug","keys","length","undefined","Error","ERRORS","ERR_PATH_REWRITER_CONFIG","rules","key","entries","push","RegExp","info"],"sources":["C:/Users/gram1/Desktop/Frontend-React/mainpage_react/node_modules/http-proxy-middleware/dist/path-rewriter.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createPathRewriter = void 0;\nconst isPlainObj = require(\"is-plain-obj\");\nconst errors_1 = require(\"./errors\");\nconst logger_1 = require(\"./logger\");\nconst logger = (0, logger_1.getInstance)();\n/**\n * Create rewrite function, to cache parsed rewrite rules.\n *\n * @param {Object} rewriteConfig\n * @return {Function} Function to rewrite paths; This function should accept `path` (request.url) as parameter\n */\nfunction createPathRewriter(rewriteConfig) {\n    let rulesCache;\n    if (!isValidRewriteConfig(rewriteConfig)) {\n        return;\n    }\n    if (typeof rewriteConfig === 'function') {\n        const customRewriteFn = rewriteConfig;\n        return customRewriteFn;\n    }\n    else {\n        rulesCache = parsePathRewriteRules(rewriteConfig);\n        return rewritePath;\n    }\n    function rewritePath(path) {\n        let result = path;\n        for (const rule of rulesCache) {\n            if (rule.regex.test(path)) {\n                result = result.replace(rule.regex, rule.value);\n                logger.debug('[HPM] Rewriting path from \"%s\" to \"%s\"', path, result);\n                break;\n            }\n        }\n        return result;\n    }\n}\nexports.createPathRewriter = createPathRewriter;\nfunction isValidRewriteConfig(rewriteConfig) {\n    if (typeof rewriteConfig === 'function') {\n        return true;\n    }\n    else if (isPlainObj(rewriteConfig)) {\n        return Object.keys(rewriteConfig).length !== 0;\n    }\n    else if (rewriteConfig === undefined || rewriteConfig === null) {\n        return false;\n    }\n    else {\n        throw new Error(errors_1.ERRORS.ERR_PATH_REWRITER_CONFIG);\n    }\n}\nfunction parsePathRewriteRules(rewriteConfig) {\n    const rules = [];\n    if (isPlainObj(rewriteConfig)) {\n        for (const [key] of Object.entries(rewriteConfig)) {\n            rules.push({\n                regex: new RegExp(key),\n                value: rewriteConfig[key],\n            });\n            logger.info('[HPM] Proxy rewrite rule created: \"%s\" ~> \"%s\"', key, rewriteConfig[key]);\n        }\n    }\n    return rules;\n}\n"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,kBAAR,GAA6B,KAAK,CAAlC;;AACA,MAAMC,UAAU,GAAGC,OAAO,CAAC,cAAD,CAA1B;;AACA,MAAMC,QAAQ,GAAGD,OAAO,CAAC,UAAD,CAAxB;;AACA,MAAME,QAAQ,GAAGF,OAAO,CAAC,UAAD,CAAxB;;AACA,MAAMG,MAAM,GAAG,CAAC,GAAGD,QAAQ,CAACE,WAAb,GAAf;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASN,kBAAT,CAA4BO,aAA5B,EAA2C;EACvC,IAAIC,UAAJ;;EACA,IAAI,CAACC,oBAAoB,CAACF,aAAD,CAAzB,EAA0C;IACtC;EACH;;EACD,IAAI,OAAOA,aAAP,KAAyB,UAA7B,EAAyC;IACrC,MAAMG,eAAe,GAAGH,aAAxB;IACA,OAAOG,eAAP;EACH,CAHD,MAIK;IACDF,UAAU,GAAGG,qBAAqB,CAACJ,aAAD,CAAlC;IACA,OAAOK,WAAP;EACH;;EACD,SAASA,WAAT,CAAqBC,IAArB,EAA2B;IACvB,IAAIC,MAAM,GAAGD,IAAb;;IACA,KAAK,MAAME,IAAX,IAAmBP,UAAnB,EAA+B;MAC3B,IAAIO,IAAI,CAACC,KAAL,CAAWC,IAAX,CAAgBJ,IAAhB,CAAJ,EAA2B;QACvBC,MAAM,GAAGA,MAAM,CAACI,OAAP,CAAeH,IAAI,CAACC,KAApB,EAA2BD,IAAI,CAAChB,KAAhC,CAAT;QACAM,MAAM,CAACc,KAAP,CAAa,wCAAb,EAAuDN,IAAvD,EAA6DC,MAA7D;QACA;MACH;IACJ;;IACD,OAAOA,MAAP;EACH;AACJ;;AACDhB,OAAO,CAACE,kBAAR,GAA6BA,kBAA7B;;AACA,SAASS,oBAAT,CAA8BF,aAA9B,EAA6C;EACzC,IAAI,OAAOA,aAAP,KAAyB,UAA7B,EAAyC;IACrC,OAAO,IAAP;EACH,CAFD,MAGK,IAAIN,UAAU,CAACM,aAAD,CAAd,EAA+B;IAChC,OAAOX,MAAM,CAACwB,IAAP,CAAYb,aAAZ,EAA2Bc,MAA3B,KAAsC,CAA7C;EACH,CAFI,MAGA,IAAId,aAAa,KAAKe,SAAlB,IAA+Bf,aAAa,KAAK,IAArD,EAA2D;IAC5D,OAAO,KAAP;EACH,CAFI,MAGA;IACD,MAAM,IAAIgB,KAAJ,CAAUpB,QAAQ,CAACqB,MAAT,CAAgBC,wBAA1B,CAAN;EACH;AACJ;;AACD,SAASd,qBAAT,CAA+BJ,aAA/B,EAA8C;EAC1C,MAAMmB,KAAK,GAAG,EAAd;;EACA,IAAIzB,UAAU,CAACM,aAAD,CAAd,EAA+B;IAC3B,KAAK,MAAM,CAACoB,GAAD,CAAX,IAAoB/B,MAAM,CAACgC,OAAP,CAAerB,aAAf,CAApB,EAAmD;MAC/CmB,KAAK,CAACG,IAAN,CAAW;QACPb,KAAK,EAAE,IAAIc,MAAJ,CAAWH,GAAX,CADA;QAEP5B,KAAK,EAAEQ,aAAa,CAACoB,GAAD;MAFb,CAAX;MAIAtB,MAAM,CAAC0B,IAAP,CAAY,gDAAZ,EAA8DJ,GAA9D,EAAmEpB,aAAa,CAACoB,GAAD,CAAhF;IACH;EACJ;;EACD,OAAOD,KAAP;AACH"},"metadata":{},"sourceType":"script"}