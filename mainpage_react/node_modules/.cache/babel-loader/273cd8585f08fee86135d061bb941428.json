{"ast":null,"code":"\"use strict\";\n/* eslint-disable prefer-rest-params */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getArrow = exports.getInstance = void 0;\n\nconst util = require(\"util\");\n\nlet loggerInstance;\nconst defaultProvider = {\n  // tslint:disable: no-console\n  log: console.log,\n  debug: console.log,\n  info: console.info,\n  warn: console.warn,\n  error: console.error\n}; // log level 'weight'\n\nvar LEVELS;\n\n(function (LEVELS) {\n  LEVELS[LEVELS[\"debug\"] = 10] = \"debug\";\n  LEVELS[LEVELS[\"info\"] = 20] = \"info\";\n  LEVELS[LEVELS[\"warn\"] = 30] = \"warn\";\n  LEVELS[LEVELS[\"error\"] = 50] = \"error\";\n  LEVELS[LEVELS[\"silent\"] = 80] = \"silent\";\n})(LEVELS || (LEVELS = {}));\n\nfunction getInstance() {\n  if (!loggerInstance) {\n    loggerInstance = new Logger();\n  }\n\n  return loggerInstance;\n}\n\nexports.getInstance = getInstance;\n\nclass Logger {\n  constructor() {\n    this.setLevel('info');\n    this.setProvider(() => defaultProvider);\n  } // log will log messages, regardless of logLevels\n\n\n  log() {\n    this.provider.log(this._interpolate.apply(null, arguments));\n  }\n\n  debug() {\n    if (this._showLevel('debug')) {\n      this.provider.debug(this._interpolate.apply(null, arguments));\n    }\n  }\n\n  info() {\n    if (this._showLevel('info')) {\n      this.provider.info(this._interpolate.apply(null, arguments));\n    }\n  }\n\n  warn() {\n    if (this._showLevel('warn')) {\n      this.provider.warn(this._interpolate.apply(null, arguments));\n    }\n  }\n\n  error() {\n    if (this._showLevel('error')) {\n      this.provider.error(this._interpolate.apply(null, arguments));\n    }\n  }\n\n  setLevel(v) {\n    if (this.isValidLevel(v)) {\n      this.logLevel = v;\n    }\n  }\n\n  setProvider(fn) {\n    if (fn && this.isValidProvider(fn)) {\n      this.provider = fn(defaultProvider);\n    }\n  }\n\n  isValidProvider(fnProvider) {\n    const result = true;\n\n    if (fnProvider && typeof fnProvider !== 'function') {\n      throw new Error('[HPM] Log provider config error. Expecting a function.');\n    }\n\n    return result;\n  }\n\n  isValidLevel(levelName) {\n    const validLevels = Object.keys(LEVELS);\n    const isValid = validLevels.includes(levelName);\n\n    if (!isValid) {\n      throw new Error('[HPM] Log level error. Invalid logLevel.');\n    }\n\n    return isValid;\n  }\n  /**\n   * Decide to log or not to log, based on the log levels 'weight'\n   * @param  {String}  showLevel [debug, info, warn, error, silent]\n   * @return {Boolean}\n   */\n\n\n  _showLevel(showLevel) {\n    let result = false;\n    const currentLogLevel = LEVELS[this.logLevel];\n\n    if (currentLogLevel && currentLogLevel <= LEVELS[showLevel]) {\n      result = true;\n    }\n\n    return result;\n  } // make sure logged messages and its data are return interpolated\n  // make it possible for additional log data, such date/time or custom prefix.\n\n\n  _interpolate(format) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    const result = util.format(format, ...args);\n    return result;\n  }\n\n}\n/**\n * -> normal proxy\n * => router\n * ~> pathRewrite\n * ≈> router + pathRewrite\n *\n * @param  {String} originalPath\n * @param  {String} newPath\n * @param  {String} originalTarget\n * @param  {String} newTarget\n * @return {String}\n */\n\n\nfunction getArrow(originalPath, newPath, originalTarget, newTarget) {\n  const arrow = ['>'];\n  const isNewTarget = originalTarget !== newTarget; // router\n\n  const isNewPath = originalPath !== newPath; // pathRewrite\n\n  if (isNewPath && !isNewTarget) {\n    arrow.unshift('~');\n  } else if (!isNewPath && isNewTarget) {\n    arrow.unshift('=');\n  } else if (isNewPath && isNewTarget) {\n    arrow.unshift('≈');\n  } else {\n    arrow.unshift('-');\n  }\n\n  return arrow.join('');\n}\n\nexports.getArrow = getArrow;","map":{"version":3,"names":["Object","defineProperty","exports","value","getArrow","getInstance","util","require","loggerInstance","defaultProvider","log","console","debug","info","warn","error","LEVELS","Logger","constructor","setLevel","setProvider","provider","_interpolate","apply","arguments","_showLevel","v","isValidLevel","logLevel","fn","isValidProvider","fnProvider","result","Error","levelName","validLevels","keys","isValid","includes","showLevel","currentLogLevel","format","args","originalPath","newPath","originalTarget","newTarget","arrow","isNewTarget","isNewPath","unshift","join"],"sources":["C:/Users/gram1/Desktop/Frontend-React/mainpage_react/node_modules/http-proxy-middleware/dist/logger.js"],"sourcesContent":["\"use strict\";\n/* eslint-disable prefer-rest-params */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getArrow = exports.getInstance = void 0;\nconst util = require(\"util\");\nlet loggerInstance;\nconst defaultProvider = {\n    // tslint:disable: no-console\n    log: console.log,\n    debug: console.log,\n    info: console.info,\n    warn: console.warn,\n    error: console.error,\n};\n// log level 'weight'\nvar LEVELS;\n(function (LEVELS) {\n    LEVELS[LEVELS[\"debug\"] = 10] = \"debug\";\n    LEVELS[LEVELS[\"info\"] = 20] = \"info\";\n    LEVELS[LEVELS[\"warn\"] = 30] = \"warn\";\n    LEVELS[LEVELS[\"error\"] = 50] = \"error\";\n    LEVELS[LEVELS[\"silent\"] = 80] = \"silent\";\n})(LEVELS || (LEVELS = {}));\nfunction getInstance() {\n    if (!loggerInstance) {\n        loggerInstance = new Logger();\n    }\n    return loggerInstance;\n}\nexports.getInstance = getInstance;\nclass Logger {\n    constructor() {\n        this.setLevel('info');\n        this.setProvider(() => defaultProvider);\n    }\n    // log will log messages, regardless of logLevels\n    log() {\n        this.provider.log(this._interpolate.apply(null, arguments));\n    }\n    debug() {\n        if (this._showLevel('debug')) {\n            this.provider.debug(this._interpolate.apply(null, arguments));\n        }\n    }\n    info() {\n        if (this._showLevel('info')) {\n            this.provider.info(this._interpolate.apply(null, arguments));\n        }\n    }\n    warn() {\n        if (this._showLevel('warn')) {\n            this.provider.warn(this._interpolate.apply(null, arguments));\n        }\n    }\n    error() {\n        if (this._showLevel('error')) {\n            this.provider.error(this._interpolate.apply(null, arguments));\n        }\n    }\n    setLevel(v) {\n        if (this.isValidLevel(v)) {\n            this.logLevel = v;\n        }\n    }\n    setProvider(fn) {\n        if (fn && this.isValidProvider(fn)) {\n            this.provider = fn(defaultProvider);\n        }\n    }\n    isValidProvider(fnProvider) {\n        const result = true;\n        if (fnProvider && typeof fnProvider !== 'function') {\n            throw new Error('[HPM] Log provider config error. Expecting a function.');\n        }\n        return result;\n    }\n    isValidLevel(levelName) {\n        const validLevels = Object.keys(LEVELS);\n        const isValid = validLevels.includes(levelName);\n        if (!isValid) {\n            throw new Error('[HPM] Log level error. Invalid logLevel.');\n        }\n        return isValid;\n    }\n    /**\n     * Decide to log or not to log, based on the log levels 'weight'\n     * @param  {String}  showLevel [debug, info, warn, error, silent]\n     * @return {Boolean}\n     */\n    _showLevel(showLevel) {\n        let result = false;\n        const currentLogLevel = LEVELS[this.logLevel];\n        if (currentLogLevel && currentLogLevel <= LEVELS[showLevel]) {\n            result = true;\n        }\n        return result;\n    }\n    // make sure logged messages and its data are return interpolated\n    // make it possible for additional log data, such date/time or custom prefix.\n    _interpolate(format, ...args) {\n        const result = util.format(format, ...args);\n        return result;\n    }\n}\n/**\n * -> normal proxy\n * => router\n * ~> pathRewrite\n * ≈> router + pathRewrite\n *\n * @param  {String} originalPath\n * @param  {String} newPath\n * @param  {String} originalTarget\n * @param  {String} newTarget\n * @return {String}\n */\nfunction getArrow(originalPath, newPath, originalTarget, newTarget) {\n    const arrow = ['>'];\n    const isNewTarget = originalTarget !== newTarget; // router\n    const isNewPath = originalPath !== newPath; // pathRewrite\n    if (isNewPath && !isNewTarget) {\n        arrow.unshift('~');\n    }\n    else if (!isNewPath && isNewTarget) {\n        arrow.unshift('=');\n    }\n    else if (isNewPath && isNewTarget) {\n        arrow.unshift('≈');\n    }\n    else {\n        arrow.unshift('-');\n    }\n    return arrow.join('');\n}\nexports.getArrow = getArrow;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}