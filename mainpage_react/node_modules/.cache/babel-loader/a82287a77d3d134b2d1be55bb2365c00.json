{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.responseInterceptor = void 0;\n\nconst zlib = require(\"zlib\");\n/**\n * Intercept responses from upstream.\n * Automatically decompress (deflate, gzip, brotli).\n * Give developer the opportunity to modify intercepted Buffer and http.ServerResponse\n *\n * NOTE: must set options.selfHandleResponse=true (prevent automatic call of res.end())\n */\n\n\nfunction responseInterceptor(interceptor) {\n  return async function proxyRes(proxyRes, req, res) {\n    const originalProxyRes = proxyRes;\n    let buffer = Buffer.from('', 'utf8'); // decompress proxy response\n\n    const _proxyRes = decompress(proxyRes, proxyRes.headers['content-encoding']); // concat data stream\n\n\n    _proxyRes.on('data', chunk => buffer = Buffer.concat([buffer, chunk]));\n\n    _proxyRes.on('end', async () => {\n      // copy original headers\n      copyHeaders(proxyRes, res); // call interceptor with intercepted response (buffer)\n\n      const interceptedBuffer = Buffer.from(await interceptor(buffer, originalProxyRes, req, res)); // set correct content-length (with double byte character support)\n\n      res.setHeader('content-length', Buffer.byteLength(interceptedBuffer, 'utf8'));\n      res.write(interceptedBuffer);\n      res.end();\n    });\n\n    _proxyRes.on('error', error => {\n      res.end(`Error fetching proxied request: ${error.message}`);\n    });\n  };\n}\n\nexports.responseInterceptor = responseInterceptor;\n/**\n * Streaming decompression of proxy response\n * source: https://github.com/apache/superset/blob/9773aba522e957ed9423045ca153219638a85d2f/superset-frontend/webpack.proxy-config.js#L116\n */\n\nfunction decompress(proxyRes, contentEncoding) {\n  let _proxyRes = proxyRes;\n  let decompress;\n\n  switch (contentEncoding) {\n    case 'gzip':\n      decompress = zlib.createGunzip();\n      break;\n\n    case 'br':\n      decompress = zlib.createBrotliDecompress();\n      break;\n\n    case 'deflate':\n      decompress = zlib.createInflate();\n      break;\n\n    default:\n      break;\n  }\n\n  if (decompress) {\n    _proxyRes.pipe(decompress);\n\n    _proxyRes = decompress;\n  }\n\n  return _proxyRes;\n}\n/**\n * Copy original headers\n * https://github.com/apache/superset/blob/9773aba522e957ed9423045ca153219638a85d2f/superset-frontend/webpack.proxy-config.js#L78\n */\n\n\nfunction copyHeaders(originalResponse, response) {\n  response.statusCode = originalResponse.statusCode;\n  response.statusMessage = originalResponse.statusMessage;\n\n  if (response.setHeader) {\n    let keys = Object.keys(originalResponse.headers); // ignore chunked, brotli, gzip, deflate headers\n\n    keys = keys.filter(key => !['content-encoding', 'transfer-encoding'].includes(key));\n    keys.forEach(key => {\n      let value = originalResponse.headers[key];\n\n      if (key === 'set-cookie') {\n        // remove cookie domain\n        value = Array.isArray(value) ? value : [value];\n        value = value.map(x => x.replace(/Domain=[^;]+?/i, ''));\n      }\n\n      response.setHeader(key, value);\n    });\n  } else {\n    response.headers = originalResponse.headers;\n  }\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","responseInterceptor","zlib","require","interceptor","proxyRes","req","res","originalProxyRes","buffer","Buffer","from","_proxyRes","decompress","headers","on","chunk","concat","copyHeaders","interceptedBuffer","setHeader","byteLength","write","end","error","message","contentEncoding","createGunzip","createBrotliDecompress","createInflate","pipe","originalResponse","response","statusCode","statusMessage","keys","filter","key","includes","forEach","Array","isArray","map","x","replace"],"sources":["C:/Users/gram1/Desktop/Frontend-React/mainpage_react/node_modules/http-proxy-middleware/dist/handlers/response-interceptor.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.responseInterceptor = void 0;\nconst zlib = require(\"zlib\");\n/**\n * Intercept responses from upstream.\n * Automatically decompress (deflate, gzip, brotli).\n * Give developer the opportunity to modify intercepted Buffer and http.ServerResponse\n *\n * NOTE: must set options.selfHandleResponse=true (prevent automatic call of res.end())\n */\nfunction responseInterceptor(interceptor) {\n    return async function proxyRes(proxyRes, req, res) {\n        const originalProxyRes = proxyRes;\n        let buffer = Buffer.from('', 'utf8');\n        // decompress proxy response\n        const _proxyRes = decompress(proxyRes, proxyRes.headers['content-encoding']);\n        // concat data stream\n        _proxyRes.on('data', (chunk) => (buffer = Buffer.concat([buffer, chunk])));\n        _proxyRes.on('end', async () => {\n            // copy original headers\n            copyHeaders(proxyRes, res);\n            // call interceptor with intercepted response (buffer)\n            const interceptedBuffer = Buffer.from(await interceptor(buffer, originalProxyRes, req, res));\n            // set correct content-length (with double byte character support)\n            res.setHeader('content-length', Buffer.byteLength(interceptedBuffer, 'utf8'));\n            res.write(interceptedBuffer);\n            res.end();\n        });\n        _proxyRes.on('error', (error) => {\n            res.end(`Error fetching proxied request: ${error.message}`);\n        });\n    };\n}\nexports.responseInterceptor = responseInterceptor;\n/**\n * Streaming decompression of proxy response\n * source: https://github.com/apache/superset/blob/9773aba522e957ed9423045ca153219638a85d2f/superset-frontend/webpack.proxy-config.js#L116\n */\nfunction decompress(proxyRes, contentEncoding) {\n    let _proxyRes = proxyRes;\n    let decompress;\n    switch (contentEncoding) {\n        case 'gzip':\n            decompress = zlib.createGunzip();\n            break;\n        case 'br':\n            decompress = zlib.createBrotliDecompress();\n            break;\n        case 'deflate':\n            decompress = zlib.createInflate();\n            break;\n        default:\n            break;\n    }\n    if (decompress) {\n        _proxyRes.pipe(decompress);\n        _proxyRes = decompress;\n    }\n    return _proxyRes;\n}\n/**\n * Copy original headers\n * https://github.com/apache/superset/blob/9773aba522e957ed9423045ca153219638a85d2f/superset-frontend/webpack.proxy-config.js#L78\n */\nfunction copyHeaders(originalResponse, response) {\n    response.statusCode = originalResponse.statusCode;\n    response.statusMessage = originalResponse.statusMessage;\n    if (response.setHeader) {\n        let keys = Object.keys(originalResponse.headers);\n        // ignore chunked, brotli, gzip, deflate headers\n        keys = keys.filter((key) => !['content-encoding', 'transfer-encoding'].includes(key));\n        keys.forEach((key) => {\n            let value = originalResponse.headers[key];\n            if (key === 'set-cookie') {\n                // remove cookie domain\n                value = Array.isArray(value) ? value : [value];\n                value = value.map((x) => x.replace(/Domain=[^;]+?/i, ''));\n            }\n            response.setHeader(key, value);\n        });\n    }\n    else {\n        response.headers = originalResponse.headers;\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}