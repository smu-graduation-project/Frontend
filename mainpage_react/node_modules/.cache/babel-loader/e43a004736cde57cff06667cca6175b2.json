{"ast":null,"code":"// import axios from \"axios\";\n// import { cookies, setCookie, useCookies } from \"react-cookie\";\n// const JWT_EXPIRY_TIME = 24 * 3600 * 1000;\n// const onLoginSuccess = response => {\n//   setCookie('access-token', response.headers[\"authorization\"]);\n//   // refreshToken 헤더에 설정\n//   axios.defaults.headers.common['Authorization'] = cookies.get('refresh-token')\n//   // accessToken 만료하기 1분 전에 로그인 연장\n//   setTimeout(onSilentRefresh, JWT_EXPIRY_TIME - 60000);\n// }\n// const onSilentRefresh = () => {\n//   //주소에 refreshtoken헤더 설정값 붙힌 상태로 post -> acesstoken 재발급.\n//   axios.post('//', data) \n//       .then(onLoginSuccess)\n//       .catch(function (error) {\n//         console.log(error);\n//       })\n// }\n// export {onLoginSuccess,onSilentRefresh};\n// //이 모듈은 순전히 refreshtoken을 이용해 accesstoken을 갱신하는데에 이용된다.\n// //이 모듈을 import 하면서(자동 accesstoken갱신) 서버로 어떠한 요청을 보낼때마다 accesstoken을\n// //쿠키값에서 빼온다음, 헤더에 강제 저장후 보내기.","map":{"version":3,"names":[],"sources":["C:/Users/gram1/Desktop/Frontend-React/mainpage_react/src/components/Loginpage/jwtrefresh.js"],"sourcesContent":["// import axios from \"axios\";\r\n// import { cookies, setCookie, useCookies } from \"react-cookie\";\r\n\r\n// const JWT_EXPIRY_TIME = 24 * 3600 * 1000;\r\n\r\n// const onLoginSuccess = response => {\r\n//   setCookie('access-token', response.headers[\"authorization\"]);\r\n//   // refreshToken 헤더에 설정\r\n//   axios.defaults.headers.common['Authorization'] = cookies.get('refresh-token')\r\n//   // accessToken 만료하기 1분 전에 로그인 연장\r\n//   setTimeout(onSilentRefresh, JWT_EXPIRY_TIME - 60000);\r\n// }\r\n\r\n// const onSilentRefresh = () => {\r\n//   //주소에 refreshtoken헤더 설정값 붙힌 상태로 post -> acesstoken 재발급.\r\n//   axios.post('//', data) \r\n//       .then(onLoginSuccess)\r\n//       .catch(function (error) {\r\n//         console.log(error);\r\n//       })\r\n// }\r\n\r\n// export {onLoginSuccess,onSilentRefresh};\r\n\r\n// //이 모듈은 순전히 refreshtoken을 이용해 accesstoken을 갱신하는데에 이용된다.\r\n// //이 모듈을 import 하면서(자동 accesstoken갱신) 서버로 어떠한 요청을 보낼때마다 accesstoken을\r\n// //쿠키값에서 빼온다음, 헤더에 강제 저장후 보내기."],"mappings":"AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA"},"metadata":{},"sourceType":"module"}