{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jueun\\\\Frontend\\\\mainpage_react\\\\src\\\\components\\\\Axios_Test\\\\floatingPopulationListChart.js\";\nimport React, { Component } from 'react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass floatingPopulationListChart extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = async () => {\n      axios.get('http://openapi.seoul.go.kr:8088/(API인증키)/json/CardSubwayStatsNew/1/10/20220201', {}).then(response => {\n        try {\n          this.setState({\n            responseFPList: response\n          });\n          this.setState({\n            append_FPList: this.state.responseFPList.data.CardSubwayStatsNew.row\n          });\n        } catch (error) {\n          alert(error);\n        }\n      }).catch(error => {\n        alert(error);\n        return false;\n      });\n    };\n\n    this.state = {\n      responseFPList: '',\n      append_FPList: ''\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      children: /*#__PURE__*/_jsxDEV(AreaChart, {\n        data: data,\n        margin: {\n          top: 16,\n          right: 16,\n          bottom: 0,\n          left: 24\n        },\n        children: [/*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"time\",\n          stroke: theme.palette.text.secondary,\n          style: theme.typography.body2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n          stroke: theme.palette.text.secondary,\n          style: theme.typography.body2,\n          children: /*#__PURE__*/_jsxDEV(Label, {\n            angle: 270,\n            position: \"left\",\n            style: {\n              textAnchor: 'middle',\n              fill: theme.palette.text.primary,\n              ...theme.typography.body1\n            },\n            children: \"Temperature\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          isAnimationActive: false,\n          type: \"monotone\",\n          dataKey: \"amount\",\n          stroke: theme.palette.primary.main,\n          dot: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default floatingPopulationListChart;","map":{"version":3,"sources":["C:/Users/Jueun/Frontend/mainpage_react/src/components/Axios_Test/floatingPopulationListChart.js"],"names":["React","Component","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","axios","floatingPopulationListChart","constructor","props","componentDidMount","get","then","response","setState","responseFPList","append_FPList","state","data","CardSubwayStatsNew","row","error","alert","catch","render","top","right","bottom","left","theme","palette","text","secondary","typography","body2","textAnchor","fill","primary","body1","main"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,KAA1B,EAAiCC,KAAjC,EAAwCC,aAAxC,EAAuDC,OAAvD,EAAgEC,MAAhE,QAA8E,UAA9E;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,2BAAN,SAA0CT,SAA1C,CAAoD;AAChDU,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAQnBC,iBARmB,GAQC,YAAY;AAC5BJ,MAAAA,KAAK,CAACK,GAAN,CAAU,gFAAV,EAA4F,EAA5F,EAECC,IAFD,CAEOC,QAAQ,IAAI;AACf,YAAI;AACA,eAAKC,QAAL,CAAc;AAAEC,YAAAA,cAAc,EAAEF;AAAlB,WAAd;AACA,eAAKC,QAAL,CAAc;AAAEE,YAAAA,aAAa,EAAE,KAAKC,KAAL,CAAWF,cAAX,CAA0BG,IAA1B,CAA+BC,kBAA/B,CAAkDC;AAAnE,WAAd;AACH,SAHD,CAGE,OAAOC,KAAP,EAAc;AACZC,UAAAA,KAAK,CAACD,KAAD,CAAL;AACH;AACJ,OATD,EAUCE,KAVD,CAUQF,KAAK,IAAI;AAACC,QAAAA,KAAK,CAACD,KAAD,CAAL;AAAc,eAAO,KAAP;AAAc,OAV9C;AAWH,KApBkB;;AAEf,SAAKJ,KAAL,GAAa;AACTF,MAAAA,cAAc,EAAE,EADP;AAETC,MAAAA,aAAa,EAAE;AAFN,KAAb;AAIH;;AAgBDQ,EAAAA,MAAM,GAAI;AACN,wBACI,QAAC,mBAAD;AAAA,6BACF,QAAC,SAAD;AACE,QAAA,IAAI,EAAEN,IADR;AAEE,QAAA,MAAM,EAAE;AACNO,UAAAA,GAAG,EAAE,EADC;AAENC,UAAAA,KAAK,EAAE,EAFD;AAGNC,UAAAA,MAAM,EAAE,CAHF;AAINC,UAAAA,IAAI,EAAE;AAJA,SAFV;AAAA,gCASE,QAAC,KAAD;AACE,UAAA,OAAO,EAAC,MADV;AAEE,UAAA,MAAM,EAAEC,KAAK,CAACC,OAAN,CAAcC,IAAd,CAAmBC,SAF7B;AAGE,UAAA,KAAK,EAAEH,KAAK,CAACI,UAAN,CAAiBC;AAH1B;AAAA;AAAA;AAAA;AAAA,gBATF,eAcE,QAAC,KAAD;AACE,UAAA,MAAM,EAAEL,KAAK,CAACC,OAAN,CAAcC,IAAd,CAAmBC,SAD7B;AAEE,UAAA,KAAK,EAAEH,KAAK,CAACI,UAAN,CAAiBC,KAF1B;AAAA,iCAIE,QAAC,KAAD;AACE,YAAA,KAAK,EAAE,GADT;AAEE,YAAA,QAAQ,EAAC,MAFX;AAGE,YAAA,KAAK,EAAE;AACLC,cAAAA,UAAU,EAAE,QADP;AAELC,cAAAA,IAAI,EAAEP,KAAK,CAACC,OAAN,CAAcC,IAAd,CAAmBM,OAFpB;AAGL,iBAAGR,KAAK,CAACI,UAAN,CAAiBK;AAHf,aAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,gBAdF,eA+BE,QAAC,IAAD;AACE,UAAA,iBAAiB,EAAE,KADrB;AAEE,UAAA,IAAI,EAAC,UAFP;AAGE,UAAA,OAAO,EAAC,QAHV;AAIE,UAAA,MAAM,EAAET,KAAK,CAACC,OAAN,CAAcO,OAAd,CAAsBE,IAJhC;AAKE,UAAA,GAAG,EAAE;AALP;AAAA;AAAA;AAAA;AAAA,gBA/BF;AAAA;AAAA;AAAA;AAAA;AAAA;AADE;AAAA;AAAA;AAAA;AAAA,YADJ;AA2CH;;AAnE+C;;AAsEpD,eAAehC,2BAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\r\nimport axios from \"axios\";\r\n\r\nclass floatingPopulationListChart extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            responseFPList: '',\r\n            append_FPList: '',\r\n        }\r\n    }\r\n\r\n    componentDidMount = async () => {\r\n        axios.get('http://openapi.seoul.go.kr:8088/(API인증키)/json/CardSubwayStatsNew/1/10/20220201', {\r\n        })\r\n        .then( response => {\r\n            try {\r\n                this.setState({ responseFPList: response });\r\n                this.setState({ append_FPList: this.state.responseFPList.data.CardSubwayStatsNew.row });\r\n            } catch (error) {\r\n                alert(error)\r\n            }\r\n        })\r\n        .catch( error => {alert(error); return false;} );\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <ResponsiveContainer>\r\n          <AreaChart\r\n            data={data}\r\n            margin={{\r\n              top: 16,\r\n              right: 16,\r\n              bottom: 0,\r\n              left: 24,\r\n            }}\r\n          >\r\n            <XAxis\r\n              dataKey=\"time\"\r\n              stroke={theme.palette.text.secondary}\r\n              style={theme.typography.body2}\r\n            />\r\n            <YAxis\r\n              stroke={theme.palette.text.secondary}\r\n              style={theme.typography.body2}\r\n            >\r\n              <Label\r\n                angle={270}\r\n                position=\"left\"\r\n                style={{\r\n                  textAnchor: 'middle',\r\n                  fill: theme.palette.text.primary,\r\n                  ...theme.typography.body1,\r\n                }}\r\n              >\r\n                Temperature\r\n\r\n              </Label>\r\n            </YAxis>\r\n            <Line\r\n              isAnimationActive={false}\r\n              type=\"monotone\"\r\n              dataKey=\"amount\"\r\n              stroke={theme.palette.primary.main}\r\n              dot={false}\r\n            />\r\n          </AreaChart>\r\n        </ResponsiveContainer>\r\n          );\r\n    }\r\n}\r\n\r\nexport default floatingPopulationListChart;"]},"metadata":{},"sourceType":"module"}