{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jueun\\\\Frontend\\\\mainpage_react\\\\src\\\\components\\\\Node\\\\Chart_temperature.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useTheme } from '@mui/material/styles';\nimport { LineChart, AreaChart, Area, Tooltip, Line, XAxis, YAxis, Label, ResponsiveContainer } from 'recharts';\nimport Title from './Title';\nimport axios from 'axios';\n/* 가상데이터\r\n\r\nfunction createData(date) {\r\n   {posts.map(post => (\r\n            <li key = {post.date}>\r\n              this.date={post.date}\r\n              this.maxTemperature={post.maxTemperature}\r\n              this.minTemperature={post.minTemperature}\r\n              this.averageTemperature={post.averageTemperature}\r\n            </li>\r\n          ))}\r\n    return { date,maxTemperature,minTemperature,averageTemperature };\r\n  }\r\n  \r\n  const rangeData = [\r\n    {\r\n      \"time\": \"00:00\",\r\n      \"max\": [\r\n        0, 26.5\r\n      ],\r\n      \"min\": [\r\n        0, 23.0\r\n      ]\r\n\r\n    },\r\n    {\r\n      \"time\": \"03:00\",\r\n      \"max\": [\r\n        0, 25.7\r\n      ],\r\n      \"min\": [\r\n        0, 24.0\r\n      ]\r\n    },\r\n    {\r\n      \"time\": \"05:00\",\r\n      \"max\": [\r\n        0, 23.0\r\n      ],\r\n      \"min\": [\r\n        0, 21.0\r\n      ]\r\n    },\r\n    {\r\n      \"time\": \"07:00\",\r\n      \"max\": [\r\n        0, 26.0\r\n      ],\r\n      \"min\": [\r\n        0, 23.0\r\n      ]\r\n    },\r\n    {\r\n      \"time\": \"09:00\",\r\n      \"max\": [\r\n        0, 25.0\r\n      ],\r\n      \"min\": [\r\n        0, 21.0\r\n      ]\r\n    }\r\n\r\n  ]\r\n  const data = [\r\n    createData('00:00', 26.5, 23.0),\r\n    createData('03:00', 25.7, 24.0),\r\n    createData('06:00', 23.0, 22.0),\r\n    createData('09:00', 26.5, 24.7),\r\n    createData('12:00', 24.0, 21.3),\r\n    createData('15:00', 25.0, 22.4),\r\n    createData('18:00', 25.6, 23.8),\r\n    createData('21:00', 26.5, 24.2),\r\n    createData('24:00', undefined),\r\n  ];\r\n  \r\n  */\n\n/*\r\n  function createData(date) {\r\n    var max, min, average;\r\n    {posts.map(post => (\r\n             <li key = {post.date}>\r\n               this.date={post.date}\r\n               this.maxTemperature={post.max}\r\n               this.minTemperature={post.min}\r\n               this.averageTemperature={post.average}\r\n             </li>\r\n           ))}\r\n     return { date, max, min, average };\r\n  }\r\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Chart() {\n  _s();\n\n  const [posts] = useState([]);\n\n  function createData(date) {\n    var max, min, average;\n    {\n      posts.map(post => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"this.date=\", post.date, \"this.maxTemperature=\", post.max, \"this.minTemperature=\", post.min, \"this.averageTemperature=\", post.average]\n      }, post.date, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 16\n      }, this));\n    }\n    return {\n      date,\n      max,\n      min,\n      average\n    };\n  }\n\n  useEffect(async () => {\n    /*axios({\r\n      method: 'GET',\r\n      url:'api/formerData/temperature'\r\n    }).then(response => setPosts(response.data))*/\n    try {\n      const f = () => {\n        axios.get('http://220.149.31.104:8080/api/formerData/temperature/list').then(response => {\n          f(response.data.startDate);\n        });\n      };\n    } catch (error) {\n      console.log(error);\n    }\n  });\n  /* \r\n  const f = () => {\r\n      axios.get('http://220.149.31.104:8080/api/formerData/temperature/list', \r\n        { success: true },\r\n        {code: code},\r\n        {message: \"성공\"}\r\n      )\r\n      .then((response)=> {\r\n        f(response.data.date)\r\n      })\r\n    } */\n\n  const theme = useTheme();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"createData(date)\"\n      }, post.date, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        children: \"Today\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        children: /*#__PURE__*/_jsxDEV(AreaChart, {\n          data: createData,\n          margin: {\n            top: 16,\n            right: 16,\n            bottom: 0,\n            left: 24\n          },\n          children: [/*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"time\",\n            stroke: theme.palette.text.secondary,\n            style: theme.typography.body2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n            stroke: theme.palette.text.secondary,\n            style: theme.typography.body2,\n            children: /*#__PURE__*/_jsxDEV(Label, {\n              angle: 270,\n              position: \"left\",\n              style: {\n                textAnchor: 'middle',\n                fill: theme.palette.text.primary,\n                ...theme.typography.body1\n              },\n              children: \"Temperature\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Area, {\n            type: \"monotone\",\n            dataKey: \"maxTemperature\",\n            stroke: \"#ffc658\",\n            fill: \"#ffc658\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Area, {\n            type: \"monotone\",\n            dataKey: \"averageTemperature\",\n            stroke: \"#82ca9d\",\n            fill: \"#82ca9d\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Area, {\n            type: \"monotone\",\n            dataKey: \"minTemperature\",\n            stroke: \"#8884d8\",\n            fill: \"#8884d8\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Chart, \"z4Ma1YDNqXGb2bXTmeu5hxWZAnA=\", false, function () {\n  return [useTheme];\n});\n\n_c = Chart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"sources":["C:/Users/Jueun/Frontend/mainpage_react/src/components/Node/Chart_temperature.js"],"names":["React","useState","useEffect","useTheme","LineChart","AreaChart","Area","Tooltip","Line","XAxis","YAxis","Label","ResponsiveContainer","Title","axios","Chart","posts","createData","date","max","min","average","map","post","f","get","then","response","data","startDate","error","console","log","theme","top","right","bottom","left","palette","text","secondary","typography","body2","textAnchor","fill","primary","body1"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,QAAT,QAAyB,sBAAzB;AACA,SAASC,SAAT,EAAoBC,SAApB,EAA+BC,IAA/B,EAAqCC,OAArC,EAA8CC,IAA9C,EAAoDC,KAApD,EAA2DC,KAA3D,EAAkEC,KAAlE,EAAyEC,mBAAzE,QAAoG,UAApG;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEE,eAAe,SAASC,KAAT,GAAiB;AAAA;;AAC9B,QAAM,CAACC,KAAD,IAAUf,QAAQ,CAAC,EAAD,CAAxB;;AAEA,WAASgB,UAAT,CAAoBC,IAApB,EAA0B;AACxB,QAAIC,GAAJ,EAASC,GAAT,EAAcC,OAAd;AACA;AAACL,MAAAA,KAAK,CAACM,GAAN,CAAUC,IAAI,iBACN;AAAA,iCACaA,IAAI,CAACL,IADlB,0BAEuBK,IAAI,CAACJ,GAF5B,0BAGuBI,IAAI,CAACH,GAH5B,8BAI2BG,IAAI,CAACF,OAJhC;AAAA,SAAWE,IAAI,CAACL,IAAhB;AAAA;AAAA;AAAA;AAAA,cADR;AAOS;AACT,WAAO;AAAEA,MAAAA,IAAF;AAAQC,MAAAA,GAAR;AAAaC,MAAAA,GAAb;AAAkBC,MAAAA;AAAlB,KAAP;AACF;;AAEDnB,EAAA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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { LineChart, AreaChart, Area, Tooltip, Line, XAxis, YAxis, Label, ResponsiveContainer } from 'recharts';\r\nimport Title from './Title';\r\nimport axios from 'axios';\r\n\r\n/* 가상데이터\r\n\r\nfunction createData(date) {\r\n   {posts.map(post => (\r\n            <li key = {post.date}>\r\n              this.date={post.date}\r\n              this.maxTemperature={post.maxTemperature}\r\n              this.minTemperature={post.minTemperature}\r\n              this.averageTemperature={post.averageTemperature}\r\n            </li>\r\n          ))}\r\n    return { date,maxTemperature,minTemperature,averageTemperature };\r\n  }\r\n  \r\n  const rangeData = [\r\n    {\r\n      \"time\": \"00:00\",\r\n      \"max\": [\r\n        0, 26.5\r\n      ],\r\n      \"min\": [\r\n        0, 23.0\r\n      ]\r\n\r\n    },\r\n    {\r\n      \"time\": \"03:00\",\r\n      \"max\": [\r\n        0, 25.7\r\n      ],\r\n      \"min\": [\r\n        0, 24.0\r\n      ]\r\n    },\r\n    {\r\n      \"time\": \"05:00\",\r\n      \"max\": [\r\n        0, 23.0\r\n      ],\r\n      \"min\": [\r\n        0, 21.0\r\n      ]\r\n    },\r\n    {\r\n      \"time\": \"07:00\",\r\n      \"max\": [\r\n        0, 26.0\r\n      ],\r\n      \"min\": [\r\n        0, 23.0\r\n      ]\r\n    },\r\n    {\r\n      \"time\": \"09:00\",\r\n      \"max\": [\r\n        0, 25.0\r\n      ],\r\n      \"min\": [\r\n        0, 21.0\r\n      ]\r\n    }\r\n\r\n  ]\r\n  const data = [\r\n    createData('00:00', 26.5, 23.0),\r\n    createData('03:00', 25.7, 24.0),\r\n    createData('06:00', 23.0, 22.0),\r\n    createData('09:00', 26.5, 24.7),\r\n    createData('12:00', 24.0, 21.3),\r\n    createData('15:00', 25.0, 22.4),\r\n    createData('18:00', 25.6, 23.8),\r\n    createData('21:00', 26.5, 24.2),\r\n    createData('24:00', undefined),\r\n  ];\r\n  \r\n  */\r\n/*\r\n  function createData(date) {\r\n    var max, min, average;\r\n    {posts.map(post => (\r\n             <li key = {post.date}>\r\n               this.date={post.date}\r\n               this.maxTemperature={post.max}\r\n               this.minTemperature={post.min}\r\n               this.averageTemperature={post.average}\r\n             </li>\r\n           ))}\r\n     return { date, max, min, average };\r\n  }\r\n*/\r\n\r\n  export default function Chart() {\r\n    const [posts] = useState([]);\r\n\r\n    function createData(date) {\r\n      var max, min, average;\r\n      {posts.map(post => (\r\n               <li key = {post.date}>\r\n                 this.date={post.date}\r\n                 this.maxTemperature={post.max}\r\n                 this.minTemperature={post.min}\r\n                 this.averageTemperature={post.average}\r\n               </li>\r\n             ))}\r\n       return { date, max, min, average };\r\n    }\r\n\r\n    useEffect(async () => {\r\n      /*axios({\r\n        method: 'GET',\r\n        url:'api/formerData/temperature'\r\n      }).then(response => setPosts(response.data))*/\r\n\r\n      try{\r\n        const f = () => {\r\n          axios.get('http://220.149.31.104:8080/api/formerData/temperature/list', \r\n            \r\n          )\r\n          .then((response)=> {\r\n            f(response.data.startDate)\r\n          })\r\n        }\r\n      }catch(error){\r\n        console.log(error)\r\n      }\r\n\r\n    })\r\n\r\n/* \r\nconst f = () => {\r\n    axios.get('http://220.149.31.104:8080/api/formerData/temperature/list', \r\n      { success: true },\r\n      {code: code},\r\n      {message: \"성공\"}\r\n    )\r\n    .then((response)=> {\r\n      f(response.data.date)\r\n    })\r\n  } */\r\n\r\n    const theme = useTheme();\r\n  \r\n    return (\r\n      <div>\r\n      <ul>\r\n          {posts.map(post => (\r\n            <li key = {post.date}>\r\n              createData(date)\r\n            </li>\r\n          ))}\r\n      </ul>\r\n\r\n      <React.Fragment>\r\n        <Title>Today</Title>\r\n        <ResponsiveContainer>\r\n          <AreaChart\r\n            data={createData}\r\n            margin={{\r\n              top: 16,\r\n              right: 16,\r\n              bottom: 0,\r\n              left: 24,\r\n            }}\r\n          >\r\n            <XAxis\r\n              dataKey=\"time\"\r\n              stroke={theme.palette.text.secondary}\r\n              style={theme.typography.body2}\r\n            />\r\n            <YAxis\r\n              stroke={theme.palette.text.secondary}\r\n              style={theme.typography.body2}\r\n            >\r\n              <Label\r\n                angle={270}\r\n                position=\"left\"\r\n                style={{\r\n                  textAnchor: 'middle',\r\n                  fill: theme.palette.text.primary,\r\n                  ...theme.typography.body1,\r\n                }}\r\n              >\r\n                Temperature\r\n\r\n              </Label>\r\n            </YAxis>\r\n            <Area type=\"monotone\" dataKey=\"maxTemperature\" stroke=\"#ffc658\" fill=\"#ffc658\" />\r\n            <Area type=\"monotone\" dataKey=\"averageTemperature\" stroke=\"#82ca9d\" fill=\"#82ca9d\" />\r\n            <Area type=\"monotone\" dataKey=\"minTemperature\" stroke=\"#8884d8\" fill=\"#8884d8\" />\r\n            <Tooltip />\r\n          </AreaChart>\r\n        </ResponsiveContainer>\r\n      </React.Fragment>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  "]},"metadata":{},"sourceType":"module"}