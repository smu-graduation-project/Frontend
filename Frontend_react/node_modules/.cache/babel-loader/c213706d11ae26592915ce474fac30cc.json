{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jueun\\\\Frontend\\\\mainpage_react\\\\src\\\\components\\\\Node\\\\Chart_test.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport * as React from 'react';\nimport { useTheme } from '@mui/material/styles';\nimport { AreaChart, Line, XAxis, YAxis, Label, ResponsiveContainer } from 'recharts';\nimport Title from './Title';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar port = 1;\n\nconst DataRequest = () => {\n  _s();\n\n  const [datas, setDatas] = useState([]);\n  useEffect(() => {\n    axios({\n      method: \"get\",\n      // 통신 방식\n      url: \"http://220.149.31.104:9090/api/formerData/temperature/list\" + \"/\" + port,\n      // 서버\n      params: {\n        startDate: \"2022-01-01\",\n        endDate: \"2022-03-06\"\n      },\n      paramsSerializer: function (params) {\n        return qs.stringify(params, {\n          arrayFormat: 'brackets'\n        });\n      },\n      responseType: 'json',\n      headers: {\n        'Content-Type': `application/json`\n      }\n    }) // axios 정의 마침.\n    // axios.then 시작.\n    .then(res => {\n      console.log(res.data); // [{}, ... ,{}] 형태\n\n      return res.data;\n    }).then(data => {\n      setDatas(JSON.stringify(data)); // console.log(response.success)\n      // console.log(response.status)\n      // console.log(response.statusText)\n      // console.log(response.headers)\n      // console.log(response.config)\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\" \", datas, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(DataRequest, \"UEH8AZy0g96Mo45BF5TmiQsDG/g=\");\n\n_c = DataRequest;\n\nfunction createData(date, max, min, average) {\n  return {\n    date,\n    max,\n    min,\n    average\n  };\n}\n\nconst tem = [createData(\"2022-01-01\", 7.54, 4.43, 6.22)];\nexport default function Chart() {\n  _s2();\n\n  const theme = useTheme();\n\n  /*#__PURE__*/\n  _jsxDEV(\"div\", {\n    children: tem.map(data => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [data.date, \",\", data.max, \",\", data.min, \",\", data.average]\n      }, data.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      children: \"Today\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      children: /*#__PURE__*/_jsxDEV(AreaChart, {\n        data: tem,\n        margin: {\n          top: 16,\n          right: 16,\n          bottom: 0,\n          left: 24\n        },\n        children: [/*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"time\",\n          stroke: theme.palette.text.secondary,\n          style: theme.typography.body2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n          stroke: theme.palette.text.secondary,\n          style: theme.typography.body2,\n          children: /*#__PURE__*/_jsxDEV(Label, {\n            angle: 270,\n            position: \"left\",\n            style: {\n              textAnchor: 'middle',\n              fill: theme.palette.text.primary,\n              ...theme.typography.body1\n            },\n            children: \"Temperature\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          isAnimationActive: false,\n          type: \"monotone\",\n          dataKey: \"amount\",\n          stroke: theme.palette.primary.main,\n          dot: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 7\n  }, this);\n}\n\n_s2(Chart, \"VrMvFCCB9Haniz3VCRPNUiCauHs=\", false, function () {\n  return [useTheme];\n});\n\n_c2 = Chart;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"DataRequest\");\n$RefreshReg$(_c2, \"Chart\");","map":{"version":3,"sources":["C:/Users/Jueun/Frontend/mainpage_react/src/components/Node/Chart_test.js"],"names":["React","useTheme","AreaChart","Line","XAxis","YAxis","Label","ResponsiveContainer","Title","port","DataRequest","datas","setDatas","useState","useEffect","axios","method","url","params","startDate","endDate","paramsSerializer","qs","stringify","arrayFormat","responseType","headers","then","res","console","log","data","JSON","createData","date","max","min","average","tem","Chart","theme","map","id","top","right","bottom","left","palette","text","secondary","typography","body2","textAnchor","fill","primary","body1","main"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { AreaChart, Line, XAxis, YAxis, Label, ResponsiveContainer } from 'recharts';\r\nimport Title from './Title';\r\n\r\nvar port=1;\r\n\r\nconst DataRequest = () => {\r\n    const [datas, setDatas] = useState([]);\r\n    \r\n\r\n    useEffect(() => { \r\n        axios({\r\n        method: \"get\", // 통신 방식\r\n        url: \"http://220.149.31.104:9090/api/formerData/temperature/list\"+\"/\"+port, // 서버\r\n        params: {\r\n            startDate : \"2022-01-01\",\r\n            endDate : \"2022-03-06\"\r\n        },\r\n        paramsSerializer: function (params) {\r\n            return qs.stringify(params, {arrayFormat: 'brackets'})\r\n        },\r\n        responseType: 'json',\r\n        headers: {'Content-Type': `application/json`},\r\n        })\r\n\r\n// axios 정의 마침.\r\n// axios.then 시작.\r\n        .then(res => {\r\n            console.log(res.data); // [{}, ... ,{}] 형태\r\n            return res.data;\r\n        })\r\n        .then(data => {\r\n            setDatas(JSON.stringify(data));\r\n            \r\n            // console.log(response.success)\r\n            // console.log(response.status)\r\n            // console.log(response.statusText)\r\n            // console.log(response.headers)\r\n            // console.log(response.config)\r\n        })\r\n    },[]);\r\n\r\n    return(\r\n        <>\r\n        {/* 출력테스트1 */}\r\n        <h1> {datas} </h1>\r\n\r\n        \r\n        </>\r\n    );\r\n\r\n}\r\n\r\nfunction createData(date, max, min, average) {\r\n    return { date, max, min, average };\r\n  }\r\n  \r\n  const tem = [\r\n    createData(\"2022-01-01\", 7.54, 4.43, 6.22)\r\n  ];\r\n  \r\n  export default function Chart() {\r\n    const theme = useTheme();\r\n    \r\n        <div>\r\n          {tem.map(data =>{\r\n            return (<div key={data.id}>\r\n              {data.date},\r\n              {data.max},\r\n              {data.min},\r\n              {data.average}\r\n            </div>)\r\n          })}\r\n        </div>\r\n      \r\n    \r\n  \r\n    return (\r\n      <React.Fragment>\r\n        <Title>Today</Title>\r\n        <ResponsiveContainer>\r\n          <AreaChart\r\n            data={tem}\r\n            margin={{\r\n              top: 16,\r\n              right: 16,\r\n              bottom: 0,\r\n              left: 24,\r\n            }}\r\n          >\r\n            <XAxis\r\n              dataKey=\"time\"\r\n              stroke={theme.palette.text.secondary}\r\n              style={theme.typography.body2}\r\n            />\r\n            <YAxis\r\n              stroke={theme.palette.text.secondary}\r\n              style={theme.typography.body2}\r\n            >\r\n              <Label\r\n                angle={270}\r\n                position=\"left\"\r\n                style={{\r\n                  textAnchor: 'middle',\r\n                  fill: theme.palette.text.primary,\r\n                  ...theme.typography.body1,\r\n                }}\r\n              >\r\n                Temperature\r\n\r\n              </Label>\r\n            </YAxis>\r\n            <Line\r\n              isAnimationActive={false}\r\n              type=\"monotone\"\r\n              dataKey=\"amount\"\r\n              stroke={theme.palette.primary.main}\r\n              dot={false}\r\n            />\r\n          </AreaChart>\r\n        </ResponsiveContainer>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  "]},"metadata":{},"sourceType":"module"}